{
    "configs": [
        {
            "key": "enable_mutations",
            "label": "enable_mutations",
            "description": "Controls whether the generated GraphQL schema should include object mutations or not.",
            "type": "boolean",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "lang.fetch",
            "label": "fetch",
            "description": "Default language fetch configuration",
            "type": "string",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": "^(?:ALL:?)?(?:(?:-?[\\w]{2}(?:-[\\w]*)?~?|-?NONE|ANY|BROWSER)?(?:,(?:-?[\\w]{2}(?:-[\\w]*)?~?|-?NONE|ANY|BROWSER))*)$"
        },
        {
            "key": "lang.validate",
            "label": "validate",
            "description": "Default language validation configuration",
            "type": "string",
            "collection": false,
            "value": "UNIQ",
            "values": null,
            "required": false,
            "regex": "^(?:[\\w]{2}~?|NONE|ANY|ALL)?(?:,(?:[\\w]{2}~?|NONE|ANY|ALL))*(?:;?UNIQ)?$"
        },
        {
            "key": "lang.implicit",
            "label": "implicit",
            "description": "Default language to use when inserting rdf:langString values.",
            "type": "string",
            "collection": false,
            "value": "en",
            "values": null,
            "required": false,
            "regex": "[\\w]{2}(?:-[\\w]*)?"
        },
        {
            "key": "lang.defaultNameFetch",
            "label": "defaultNameFetch",
            "description": "Default language spec to apply when loading values for the name property",
            "type": "string",
            "collection": false,
            "value": "ANY",
            "values": null,
            "required": false,
            "regex": "^(?:(?:-?[\\w]{2}(?:-[\\w]*)?~?|-?NONE|ANY|BROWSER)?(?:,(?:-?[\\w]{2}(?:-[\\w]*)?~?|-?NONE|ANY|BROWSER))*)$"
        },
        {
            "key": "lang.appendDefaultNameFetch",
            "label": "appendDefaultNameFetch",
            "description": "Specifies whether the default spec, if any, should be appended or not to any user-defined name fetch spec",
            "type": "boolean",
            "collection": false,
            "value": true,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "queryPfx",
            "label": "queryPfx",
            "description": "Allows setting a prefix that will be put in all queries in the GraphQL schema.",
            "type": "string",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": "[\\w]*"
        },
        {
            "key": "mutationPfx",
            "label": "mutationPfx",
            "description": "Allows setting a prefix that will be put in all mutations in the GraphQL schema.",
            "type": "string",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": "[\\w]*"
        },
        {
            "key": "search",
            "label": "search",
            "description": "Allows you to define a structure of the searchable data for fields that are not specified in the configuration of the objects and/or properties",
            "type": "dictionary",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "repository",
            "label": "repository",
            "description": "Changes the default repository used for the entire schema.",
            "type": "string",
            "collection": false,
            "value": null,
            "values": null,
            "required": false,
            "regex": "[\\w]*"
        },
        {
            "key": "includeInferred",
            "label": "includeInferred",
            "description": "Controls whether query inference is enabled or disabled by default for all queries and mutations.",
            "type": "boolean",
            "collection": false,
            "value": true,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "expandOwlSameAs",
            "label": "expandOwlSameAs",
            "description": "Controls whether owl:sameAs expansion is enabled or disabled by default for all queries and mutations.",
            "type": "boolean",
            "collection": false,
            "value": true,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "disabledChecks",
            "label": "disabledChecks",
            "description": "Specifies which checks could be disabled during the schema validation.",
            "type": "string",
            "collection": true,
            "value": true,
            "values": [
                "regexInheritanceCheck",
                "rangeCheck"
            ],
            "required": false,
            "regex": null
        },
        {
            "key": "defaultRole",
            "label": "defaultRole",
            "description": "The default RBAC role the user will receive if no roles are found in the security JWT token or none of the roles match any in the rbac section of the current SOML schema.",
            "type": "string",
            "collection": false,
            "value": "defaultRole",
            "values": null,
            "required": false,
            "regex": "[\\w]*"
        },
        {
            "key": "defaultIntegrationRole",
            "label": "defaultIntegrationRole",
            "description": "The default RBAC role that will have read-only access to the data and could be used for system integrations.",
            "type": "string",
            "collection": false,
            "value": "Federation_SystemRole",
            "values": null,
            "required": false,
            "regex": "[\\w]*"
        },
        {
            "key": "exposeSomlInGraphQL",
            "label": "exposeSomlInGraphQL",
            "description": "Controls whether GraphQL schema should include directives that expose the effective SOML configurations for each output type and property.",
            "type": "boolean",
            "collection": false,
            "value": false,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "enableCollectionCount",
            "label": "enableCollectionCount",
            "description": "Controls whether the collections should have a companion property that provides counting of the collection properties.",
            "type": "boolean",
            "collection": false,
            "value": false,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "enableTypeCount",
            "label": "enableTypeCount",
            "description": "Controls whether new counting queries should be generated for all queryable types.",
            "type": "boolean",
            "collection": false,
            "value": false,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "compactErrorMessages",
            "label": "compactErrorMessages",
            "description": "Controls the default behavior of the GraphQL Responder how to process the errors that are returned to the client.",
            "type": "boolean",
            "collection": false,
            "value": false,
            "values": null,
            "required": false,
            "regex": null
        },
        {
            "key": "enableGraphQlExplain",
            "label": "enableGraphQlExplain",
            "description": "Controls whether SemanticObjects should provide the generated SPARQL query or its explain plan.",
            "type": "boolean",
            "collection": false,
            "value": true,
            "values": null,
            "required": false,
            "regex": null
        }
    ]
}
