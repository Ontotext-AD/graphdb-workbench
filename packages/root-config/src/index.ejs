<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <base href="/">
    <title>GraphDB Workbench</title>

    <!--
      Remove this if you only support browsers that support async/await.
      This is needed by babel to share largeish helper code for compiling async/await in older
      browsers. More information at https://github.com/single-spa/create-single-spa/issues/112
    -->
    <script src="/resources/runtime.js"></script>

    <!--
      This CSP allows any SSL-enabled host and for arbitrary eval(), but you should limit these directives further to increase your app's security.
      Learn more about CSP policies at https://content-security-policy.com/#directive
    -->
    <meta http-equiv="Content-Security-Policy"
          content=" default-src 'self' <%= microFrontEndsUrls %>;
                    script-src 'self' 'unsafe-inline' 'unsafe-eval' <%= microFrontEndsUrls %> https://cdn.jsdelivr.net https://www.googletagmanager.com;
                    connect-src 'self' <%= microFrontEndsUrls %> https://www.googletagmanager.com https://region1.google-analytics.com;
                    style-src 'self' 'unsafe-inline' <%= microFrontEndsUrls %>;
                    img-src 'self' data: <%= microFrontEndsUrls %> https://www.googletagmanager.com;
                    font-src 'self' <%= microFrontEndsUrls %>;
                    base-uri 'self';">
    <meta name="importmap-type" use-injector />

    <script src="plugin-registry.js?v=<%= buildVersion %>"></script>
    <script src="plugins.js?v=<%= buildVersion %>"></script>

     <% if (isDevelopmentMode) { %>
        <script type="injector-importmap">
            {
                "imports": {
                    "single-spa": "/resources/single-spa.dev.js",
                    "@ontotext/workbench-api": "http://localhost:9003/ontotext-workbench-api.js",
                    "@ontotext/root-config": "/<%= mainBundle %>",
                    "@ontotext/legacy-workbench": "/<%= legacyWorkbenchBundle %>",
                    "@ontotext/workbench": "http://localhost:9002/main.js"
                }
            }
        </script>
    <% } else { %>
        <script type="injector-importmap">
            {
                "imports": {
                    "single-spa": "/resources/single-spa.min.js",
                    "@ontotext/workbench-api": "/<%= apiBundle %>",
                    "@ontotext/root-config": "/<%= mainBundle %>",
                    "@ontotext/legacy-workbench": "/<%= legacyWorkbenchBundle %>",
                    "@ontotext/workbench": "/<%= workbenchAppBundle %>"
                }
            }
        </script>
    <% } %>

    <!-- If you wish to turn off import-map-overrides for specific environments (prod), uncomment the line below -->
    <!-- More info at https://github.com/joeldenning/import-map-overrides/blob/master/docs/configuration.md#domain-list -->
    <!-- <meta name="import-map-overrides-domains" content="denylist:prod.example.com" /> -->

    <!-- Shared dependencies go into this import map. Your shared dependencies must be of one of the following formats:

      1. System.register (preferred when possible) - https://github.com/systemjs/systemjs/blob/master/docs/system-register.md
      2. UMD - https://github.com/umdjs/umd
      3. Global variable

      More information about shared dependencies can be found at https://single-spa.js.org/docs/recommended-setup#sharing-with-import-maps.
    -->

     <script src="/resources/import-map-overrides.js"></script>
     <script src="/resources/import-map-injector.js"></script>
</head>
<body>
<noscript>
    You need to enable JavaScript to run this app.
</noscript>
<script>
    window.importMapInjector.initPromise.then(() => {
      import('@ontotext/root-config');
    });
</script>
<import-map-overrides-full show-when-local-storage="devtools" dev-libs></import-map-overrides-full>
</body>
</html>
