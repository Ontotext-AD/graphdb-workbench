pipeline {

  tools {
    nodejs 'nodejs-18.9.0'
  }

  parameters {
    gitParameter name: 'branch',
                description: 'The branch to check out',
                branchFilter: 'origin/(.*)',
                defaultValue: 'master',
                selectedValue: 'DEFAULT',
                type: 'PT_BRANCH',
                listSize: '0',
                quickFilterEnabled: true

    string name: 'ReleaseVersion',
         description: 'Version to release',
         defaultValue: ''
  }

  agent {
    label 'graphdb-jenkins-node'
  }

  options {
    disableConcurrentBuilds()
    timeout(time: 15, unit: 'MINUTES')
    timestamps()
  }

  environment {
    CI = "true"
    NPM_TOKEN = credentials('npm-token')
    // Needed for our version of webpack + newer nodejs
    NODE_OPTIONS = "--openssl-legacy-provider"
  }

  stages {
    stage ('Prepare') {
      steps {
        // Switch to branch
        sh "git checkout ${branch}"

        // Change versions
        sh "npm version --git-tag-version=false ${ReleaseVersion}"
        dir("test-cypress/") {
          sh "npm version --git-tag-version=false ${ReleaseVersion}"
        }

        // Install
        sh "npm ci"

        // Build
        sh "npm run build"
      }
    }

    stage ('Publish') {
      steps {
        // Publish on npm
        sh "echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc && npm publish"
        // Publish cypress tests on npm
        dir("test-cypress/") {
          sh "echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc && npm publish"
        }
      }
    }
  }

  post {
    success {
      // Commit, tag and push the changes in Git
      sh "git commit -a -m 'Release ${ReleaseVersion}'"
      sh "git tag -a v${ReleaseVersion} -m 'Release v${ReleaseVersion}'"
      sh "git push --set-upstream origin ${branch} && git push --tags"
    }

    failure {
      wrap([$class: 'BuildUser']) {
        emailext(
          to: env.BUILD_USER_EMAIL,
          from: "Jenkins <hudson@ontotext.com>",
          subject: '''[Jenkins] $PROJECT_NAME - Build #$BUILD_NUMBER - $BUILD_STATUS!''',
          mimeType: 'text/html',
          body: '''${SCRIPT, template="groovy-html.template"}'''
        )
      }
    }

    always {
      sh "git checkout .npmrc"
      dir("test-cypress/") {
        sh "rm .npmrc"
      }
    }
  }
}
